angular.module("checklist-model",[]).directive("checklistModel",["$parse","$compile",function(e,t){function r(e,t,r){if(angular.isArray(e))for(var c=e.length;c--;)if(r(e[c],t))return!0;return!1}function c(e,t,c){return e=angular.isArray(e)?e:[],r(e,t,c)||e.push(t),e}function a(e,t,r){if(angular.isArray(e))for(var c=e.length;c--;)if(r(e[c],t)){e.splice(c,1);break}return e}function i(i,n,l){function o(e){i.checked=r(e,p,k)}t(n)(i);var h=e(l.checklistModel),u=h.assign,s=e(l.checklistChange),p=e(l.checklistValue)(i.$parent),k=angular.equals;l.hasOwnProperty("checklistComparator")&&(k=e(l.checklistComparator)(i.$parent)),i.$watch("checked",function(e,t){if(e!==t){var r=h(i.$parent);e===!0?u(i.$parent,c(r,p,k)):u(i.$parent,a(r,p,k)),s&&s(i)}}),angular.isFunction(i.$parent.$watchCollection)?i.$parent.$watchCollection(l.checklistModel,o):i.$parent.$watch(l.checklistModel,o,!0)}return{restrict:"A",priority:1e3,terminal:!0,scope:!0,compile:function(e,t){if("INPUT"!==e[0].tagName||"checkbox"!==t.type)throw'checklist-model should be applied to `input[type="checkbox"]`.';if(!t.checklistValue)throw"You should provide `checklist-value`.";return e.removeAttr("checklist-model"),e.attr("ng-model","checked"),i}}}]);